[{"/Users/nicholastang/Coding/spotify-circle/client/src/index.js":"1","/Users/nicholastang/Coding/spotify-circle/client/src/reportWebVitals.js":"2","/Users/nicholastang/Coding/spotify-circle/client/src/App.js":"3","/Users/nicholastang/Coding/spotify-circle/client/src/firebase.js":"4","/Users/nicholastang/Coding/spotify-circle/client/src/functions.js":"5"},{"size":500,"mtime":1610221448514,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1610221448514,"results":"8","hashOfConfig":"7"},{"size":3928,"mtime":1610276160563,"results":"9","hashOfConfig":"7"},{"size":3969,"mtime":1610256349819,"results":"10","hashOfConfig":"7"},{"size":1887,"mtime":1610267564459,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"vn9hrm",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"/Users/nicholastang/Coding/spotify-circle/client/src/index.js",[],["24","25"],"/Users/nicholastang/Coding/spotify-circle/client/src/reportWebVitals.js",[],"/Users/nicholastang/Coding/spotify-circle/client/src/App.js",["26","27","28","29","30","31","32","33","34"],"/Users/nicholastang/Coding/spotify-circle/client/src/firebase.js",[],"/Users/nicholastang/Coding/spotify-circle/client/src/functions.js",["35","36","37"],"import { useCallback } from \"react\";\n\nexport {getHashParams, trackSimilarity, artistsSimilarity, genreSimilarity}\n\nfunction getHashParams() {\n    var hashParams = {}\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q)\n    while (e) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n       e = r.exec(q)\n    }\n    return hashParams\n  }\n\n  // Track Similarity\n function trackSimilarity(usr1Tracks, usr2Tracks){\n    let similarity = usr1Tracks.filter((val) => { // filters current users topTracks with other users'\n      return usr2Tracks.indexOf(val) !== -1\n    })\n    let albums = usr1Tracks\n    return (similarity.length)///usr1Tracks.length)*100  // to be nice\n  }\n\n    // Artists Similarity\n  function artistsSimilarity(usr1Artists, usr2Artists){\n  let similarity = usr1Artists.filter((val) => {\n    return usr2Artists.indexOf(val) !== -1\n  })\n  return (similarity.length)///usr1Artists.length)*100\n  // setArtistsSimilarity((similarity.length/usr1Artists.length)*100)\n}\n\n// Genre Similarity\nfunction genreSimilarity(usr1Genres, usr2Genres){\n  let similarity = usr1Genres.filter((val) => {\n    return usr2Genres.indexOf(val) !== -1\n  })\n  return (similarity.length)///usr1Genres.length)*100\n  // setGenreSimilarity((similarity.length/usr1Genres.length)*100)\n}\n\n// Overall Similarity\nfunction computeSimilarity(usr1){\n\n//   let usr1Artists = getTopArtists(usr1)\n//   let usr1Genres = getTopGenres(usr1)\n\n//   let usr2Tracks = getTopTracks(usr2)\n//   let usr2Artists = getTopArtists(usr2)\n//   let usr2Genres = getTopGenres(usr2)\n\n//   let trackSimScore = trackSimilarity(usr1Tracks, usr2Tracks)\n//   let artistsSimScore = artistsSimilarity(usr1Artists, usr2Artists)\n//   let genreSimScore = genreSimilarity(usr1Genres, usr2Genres)\n\n//   let sum = trackSimScore + artistsSimScore + genreSimScore\n//   sum = sum/3\n//   return sum\n}\n",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":2,"column":27,"nodeType":"44","messageId":"45","endLine":2,"endColumn":36},{"ruleId":"42","severity":1,"message":"46","line":2,"column":38,"nodeType":"44","messageId":"45","endLine":2,"endColumn":49},{"ruleId":"42","severity":1,"message":"47","line":43,"column":9,"nodeType":"44","messageId":"45","endLine":43,"endColumn":13},{"ruleId":"42","severity":1,"message":"48","line":46,"column":10,"nodeType":"44","messageId":"45","endLine":46,"endColumn":23},{"ruleId":"42","severity":1,"message":"49","line":46,"column":25,"nodeType":"44","messageId":"45","endLine":46,"endColumn":43},{"ruleId":"42","severity":1,"message":"50","line":47,"column":10,"nodeType":"44","messageId":"45","endLine":47,"endColumn":25},{"ruleId":"42","severity":1,"message":"51","line":47,"column":27,"nodeType":"44","messageId":"45","endLine":47,"endColumn":47},{"ruleId":"42","severity":1,"message":"52","line":48,"column":10,"nodeType":"44","messageId":"45","endLine":48,"endColumn":23},{"ruleId":"42","severity":1,"message":"53","line":48,"column":25,"nodeType":"44","messageId":"45","endLine":48,"endColumn":43},{"ruleId":"42","severity":1,"message":"46","line":1,"column":10,"nodeType":"44","messageId":"45","endLine":1,"endColumn":21},{"ruleId":"42","severity":1,"message":"54","line":22,"column":9,"nodeType":"44","messageId":"45","endLine":22,"endColumn":15},{"ruleId":"42","severity":1,"message":"55","line":45,"column":10,"nodeType":"44","messageId":"45","endLine":45,"endColumn":27},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useCallback' is defined but never used.","'data' is assigned a value but never used.","'trackSimScore' is assigned a value but never used.","'setTrackSimilarity' is assigned a value but never used.","'artistsSimScore' is assigned a value but never used.","'setArtistsSimilarity' is assigned a value but never used.","'genreSimScore' is assigned a value but never used.","'setGenreSimilarity' is assigned a value but never used.","'albums' is assigned a value but never used.","'computeSimilarity' is defined but never used.","no-global-assign","no-unsafe-negation"]