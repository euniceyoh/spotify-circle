[{"/Users/eunice/Desktop/spotify-circle/client/src/index.js":"1","/Users/eunice/Desktop/spotify-circle/client/src/reportWebVitals.js":"2","/Users/eunice/Desktop/spotify-circle/client/src/App.js":"3","/Users/eunice/Desktop/spotify-circle/client/src/firebase.js":"4","/Users/eunice/Desktop/spotify-circle/client/src/functions.js":"5","/Users/eunice/Desktop/spotify-circle/client/src/bubblechart.js":"6","/Users/eunice/Desktop/spotify-circle/client/src/bubbleChart.js":"7"},{"size":500,"mtime":1610210144635,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1610210144636,"results":"10","hashOfConfig":"9"},{"size":4410,"mtime":1610308502823,"results":"11","hashOfConfig":"9"},{"size":3969,"mtime":1610254057653,"results":"12","hashOfConfig":"9"},{"size":1887,"mtime":1610299451214,"results":"13","hashOfConfig":"9"},{"size":3049,"mtime":1610302621780,"results":"14","hashOfConfig":"15"},{"size":3100,"mtime":1610308670836,"results":"16","hashOfConfig":"9"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"1m5l9dy",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"19"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"11jntwb",{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"19"},"/Users/eunice/Desktop/spotify-circle/client/src/index.js",[],["37","38"],"/Users/eunice/Desktop/spotify-circle/client/src/reportWebVitals.js",[],"/Users/eunice/Desktop/spotify-circle/client/src/App.js",["39","40","41","42","43","44","45","46","47","48","49"],"import SpotifyWebApi from 'spotify-web-api-js'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport firestoredb, {saveSimilarityScore, addNewFriend} from './firebase'\nimport {getHashParams, trackSimilarity, artistsSimilarity, genreSimilarity} from './functions'\nimport BubbleChart from './bubbleChart'\n\nexport default function App() {\n  const [currentUser, setCurrentUser] = useState('')\n\n  const spotifyApi = new SpotifyWebApi()\n  const params = getHashParams()\n  const token = params.access_token\n  if(token) {\n    spotifyApi.setAccessToken(token)\n  }\n\n  spotifyApi.getMe()\n    .then((user) => {\n      setCurrentUser(user.id) // a string right\n  })\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Welcome to Spotify Circle</h1>\n        <div id=\"login\">\n          <form action='http://localhost:8888/login'>\n            <input type=\"submit\" value=\"Login to Spotify\" />\n          </form>\n        </div>\n        <div>\n          Your ID: {currentUser}\n        </div>\n        <TextBox userId={currentUser}/>\n        <BubbleChart userId={currentUser} />\n      </header>\n    </div>\n  )\n}\n\nfunction TextBox(props) {\n let user = props.userId\n\n  const[inputValue, setInputValue] = useState('') // aka id of friend\n  const[data, setData] = useState([])\n  // similarity\n  const [similarityScore, setSimScore] = useState(0)\n  const [trackSimScore, setTrackSimilarity] = useState(0)\n  const [artistsSimScore, setArtistsSimilarity] = useState(0)\n  const [genreSimScore, setGenreSimilarity] = useState(0)\n  // me\n  const [genres, setGenres] = useState([])\n  const [artists, setArtists] = useState([])\n  const [tracks, setTracks] = useState([])\n  // friend\n  const [fgenres, setfGenres] = useState([])\n  const [fartists, setfArtists] = useState([])\n  const [ftracks, setfTracks] = useState([])\n  // friend list\n  const [fList, setFList] = useState([])\n  const [graphState, setGraphState] = useState(false)\n\n  let calculateScore = () => {\n      const docRef = firestoredb.collection('users').doc(user)\n      docRef.get().then((doc) => {\n        if(doc.exists) {\n          let data = doc.data();\n          setData(data)\n          setGenres(data.genres)\n          setArtists(data.artists)\n          setTracks(data.trackId)\n        }\n      }).catch(function(error) {\n        setData(null)\n      })\n      const fdocRef = firestoredb.collection('users').doc(inputValue)\n      fdocRef.get().then((doc) => {\n        if(doc.exists) {\n          let data = doc.data();\n          setData(data) // reusing\n          setfGenres(data.genres)\n          setfArtists(data.artists)\n          setfTracks(data.trackId)\n        }\n      }).catch(function(error) {\n        setData(null)\n      })\n    }\n\n    let calculateScore2 = () => {\n      let ts = trackSimilarity(tracks, ftracks)\n      // setTrackSimilarity(ts)\n      let as = artistsSimilarity(artists, fartists)\n      // setArtistsSimilarity(as)\n      let gs = genreSimilarity(genres, fgenres)\n      // setGenreSimilarity(gs)\n\n      setTracks(ts)\n      setArtists(as)\n      setGenres(gs)\n      let sum = ts + as + gs\n      setSimScore(sum)\n\n      // writing to firebase\n      addNewFriend(user, inputValue)\n      saveSimilarityScore(user, inputValue, sum)\n    }\n\n    let getFriendList = () => {\n      const docRef = firestoredb.collection('users').doc(user).collection('friendsList')\n      docRef.get().then((snapshot) => {\n        const data = []\n        snapshot.forEach(function(doc) {\n          // adding data\n          //data.push({...doc.data(), id: doc.id})\n          data.push([doc.id, doc.data().similarityScore])\n        })\n        setFList(data)\n      }).catch(function(error) {\n        setFList(null)\n      })\n    }\n\n  return (\n      <div>\n      <form onSubmit={\n        () => {\n          calculateScore()\n          calculateScore2()}\n        }>\n        {/* show personal bubble  */}\n        <label>\n          <input type=\"text\" value={inputValue} onChange={(event) => {\n            setInputValue(event.target.value)\n            }} />\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n      <div>\n        Similarity Score: {similarityScore}\n      </div>\n      <div>\n        Friend List: {(fList)}\n      </div>\n      <button onClick={\n        () => {\n          getFriendList()\n        }\n      }>\n        {/* show friend bubble */}\n        Show Friend\n      </button>\n      \n      </div>\n    )\n}\n","/Users/eunice/Desktop/spotify-circle/client/src/firebase.js",[],"/Users/eunice/Desktop/spotify-circle/client/src/functions.js",["50","51","52"],"import { useCallback } from \"react\";\n\nexport {getHashParams, trackSimilarity, artistsSimilarity, genreSimilarity}\n\nfunction getHashParams() {\n    var hashParams = {}\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q)\n    while (e) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n       e = r.exec(q)\n    }\n    return hashParams\n  }\n\n  // Track Similarity\n function trackSimilarity(usr1Tracks, usr2Tracks){\n    let similarity = usr1Tracks.filter((val) => { // filters current users topTracks with other users'\n      return usr2Tracks.indexOf(val) !== -1\n    })\n    let albums = usr1Tracks\n    return (similarity.length)///usr1Tracks.length)*100  // to be nice\n  }\n\n    // Artists Similarity\n  function artistsSimilarity(usr1Artists, usr2Artists){\n  let similarity = usr1Artists.filter((val) => {\n    return usr2Artists.indexOf(val) !== -1\n  })\n  return (similarity.length)///usr1Artists.length)*100\n  // setArtistsSimilarity((similarity.length/usr1Artists.length)*100)\n}\n\n// Genre Similarity\nfunction genreSimilarity(usr1Genres, usr2Genres){\n  let similarity = usr1Genres.filter((val) => {\n    return usr2Genres.indexOf(val) !== -1\n  })\n  return (similarity.length)///usr1Genres.length)*100\n  // setGenreSimilarity((similarity.length/usr1Genres.length)*100)\n}\n\n// Overall Similarity\nfunction computeSimilarity(usr1){\n\n//   let usr1Artists = getTopArtists(usr1)\n//   let usr1Genres = getTopGenres(usr1)\n\n//   let usr2Tracks = getTopTracks(usr2)\n//   let usr2Artists = getTopArtists(usr2)\n//   let usr2Genres = getTopGenres(usr2)\n\n//   let trackSimScore = trackSimilarity(usr1Tracks, usr2Tracks)\n//   let artistsSimScore = artistsSimilarity(usr1Artists, usr2Artists)\n//   let genreSimScore = genreSimilarity(usr1Genres, usr2Genres)\n\n//   let sum = trackSimScore + artistsSimScore + genreSimScore\n//   sum = sum/3\n//   return sum\n}\n","/Users/eunice/Desktop/spotify-circle/client/src/bubblechart.js",["53","54","55","56"],"import React, { Component } from 'react';\n\nimport BubbleChart from '@weknow/react-bubble-chart-d3';\nimport * as d3 from 'd3'\n\n",["57","58"],"/Users/eunice/Desktop/spotify-circle/client/src/bubbleChart.js",["59","60"],"import React, { useState, useEffect, useRef } from \"react\";\nimport firestoredb from './firebase'\nimport * as d3 from 'd3';\n\nfunction BubbleChart(props) {\n    // dummy data\n    const[dataIn, setData] = useState([\n        { name: \"Eunice\", similarityScore: 12},\n        { name: \"Lawrence\", similarityScore: 73},\n        { name: \"Nick\", similarityScore: 31},\n        { name: \"Carter\", similarityScore: 100},\n        { name: \"Joe Shmoe\", similarityScore: 42},\n        { name: \"Bobby Shmurda\", similarityScore: 35}\n      ])\n\n    const width = 800;\n    const height = 400;\n\n    const svgRef = useRef() // not sure what this does\n\n    useEffect(() => {\n\n        //var svg = d3.select(\"#chart\")\n\n        const svg = d3.select(svgRef.current)\n        .append(\"svg\")\n        .attr(\"height\", \"100%\")\n        .attr(\"width\", \"100%\")\n        .attr(\"transform\", \"translate(0,0)\");\n\n        // Simulation is collection of forces that determines where our elements go\n        // First we force circles to middle with x and y, then we force them apart\n        var simulation = d3.forceSimulation()\n            .force(\"x\", d3.forceX(width / 2).strength(0.05))\n            .force(\"y\", d3.forceY(height / 2).strength(0.05))\n            .force(\"collide\", d3.forceCollide( d => radiusScale(d.similarityScore)))\n\n        // Domain: smallest vs. largest input from data\n        // Range: smallest vs. largest display size\n        var radiusScale = d3.scaleSqrt().domain([1, 100]).range([10, 100])\n\n        var element = svg.selectAll(\".bubble\")\n            .data(dataIn) //\n            .enter()\n            .append(\"g\")\n            //.attr(\"transform\", function(d) { return \"translate(150,100)\" })\n\n        var circles = element\n            .append(\"circle\")\n            //.attr(\"class\", \"bubble\")\n            .attr(\"r\", d => radiusScale(d.similarityScore))\n            .attr(\"fill\", \"lightblue\")\n            //.attr(\"cx\", 100)\n            //.attr(\"cy\", 300)\n            .on(\"click\", function(event, d) {\n                console.log(d);\n            })\n            //.attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\" })\n\n        var labels = element\n            .append(\"text\")\n            //.attr('dy', '.5em')\n            .attr('text-anchor', 'middle')\n            .style('fill', 'white')\n            .style('font-size', 15)\n            .text(function(d) {\n                return d.name;\n            })\n            //.attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\" })\n\n        simulation.nodes(dataIn)\n            .on(\"tick\", ticked)\n\n        function ticked() {\n            circles\n                .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\" });\n\n            labels\n                .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\" });\n        }\n    }, [dataIn])\n\n    return (\n        <div>\n             <svg\n                width=\"100%\"\n                height=\"100%\"\n                viewBox=\"0 0 800 800\"\n                ref={svgRef}>\n            </svg>\n        </div>\n    )\n}\n\nexport default BubbleChart;\n",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":2,"column":27,"nodeType":"67","messageId":"68","endLine":2,"endColumn":36},{"ruleId":"65","severity":1,"message":"69","line":2,"column":38,"nodeType":"67","messageId":"68","endLine":2,"endColumn":49},{"ruleId":"65","severity":1,"message":"70","line":45,"column":9,"nodeType":"67","messageId":"68","endLine":45,"endColumn":13},{"ruleId":"65","severity":1,"message":"71","line":48,"column":10,"nodeType":"67","messageId":"68","endLine":48,"endColumn":23},{"ruleId":"65","severity":1,"message":"72","line":48,"column":25,"nodeType":"67","messageId":"68","endLine":48,"endColumn":43},{"ruleId":"65","severity":1,"message":"73","line":49,"column":10,"nodeType":"67","messageId":"68","endLine":49,"endColumn":25},{"ruleId":"65","severity":1,"message":"74","line":49,"column":27,"nodeType":"67","messageId":"68","endLine":49,"endColumn":47},{"ruleId":"65","severity":1,"message":"75","line":50,"column":10,"nodeType":"67","messageId":"68","endLine":50,"endColumn":23},{"ruleId":"65","severity":1,"message":"76","line":50,"column":25,"nodeType":"67","messageId":"68","endLine":50,"endColumn":43},{"ruleId":"65","severity":1,"message":"77","line":61,"column":10,"nodeType":"67","messageId":"68","endLine":61,"endColumn":20},{"ruleId":"65","severity":1,"message":"78","line":61,"column":22,"nodeType":"67","messageId":"68","endLine":61,"endColumn":35},{"ruleId":"65","severity":1,"message":"69","line":1,"column":10,"nodeType":"67","messageId":"68","endLine":1,"endColumn":21},{"ruleId":"65","severity":1,"message":"79","line":22,"column":9,"nodeType":"67","messageId":"68","endLine":22,"endColumn":15},{"ruleId":"65","severity":1,"message":"80","line":45,"column":10,"nodeType":"67","messageId":"68","endLine":45,"endColumn":27},{"ruleId":"65","severity":1,"message":"81","line":1,"column":8,"nodeType":"67","messageId":"68","endLine":1,"endColumn":13},{"ruleId":"65","severity":1,"message":"82","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":26},{"ruleId":"65","severity":1,"message":"83","line":3,"column":8,"nodeType":"67","messageId":"68","endLine":3,"endColumn":19},{"ruleId":"65","severity":1,"message":"84","line":4,"column":13,"nodeType":"67","messageId":"68","endLine":4,"endColumn":15},{"ruleId":"61","replacedBy":"85"},{"ruleId":"63","replacedBy":"86"},{"ruleId":"65","severity":1,"message":"87","line":2,"column":8,"nodeType":"67","messageId":"68","endLine":2,"endColumn":19},{"ruleId":"65","severity":1,"message":"88","line":7,"column":19,"nodeType":"67","messageId":"68","endLine":7,"endColumn":26},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useCallback' is defined but never used.","'data' is assigned a value but never used.","'trackSimScore' is assigned a value but never used.","'setTrackSimilarity' is assigned a value but never used.","'artistsSimScore' is assigned a value but never used.","'setArtistsSimilarity' is assigned a value but never used.","'genreSimScore' is assigned a value but never used.","'setGenreSimilarity' is assigned a value but never used.","'graphState' is assigned a value but never used.","'setGraphState' is assigned a value but never used.","'albums' is assigned a value but never used.","'computeSimilarity' is defined but never used.","'React' is defined but never used.","'Component' is defined but never used.","'BubbleChart' is defined but never used.","'d3' is defined but never used.",["89"],["90"],"'firestoredb' is defined but never used.","'setData' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]